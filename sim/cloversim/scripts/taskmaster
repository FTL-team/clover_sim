#!/usr/bin/env python3

from cloversim.task import WORLD_PATH
import sys
import rospy
import time
import socket

myargv = rospy.myargv(argv=sys.argv)


def generate_world():
  from cloversim_task.world import WORLD
  WORLD.save()
  return WORLD_PATH


def run_checker():
  import cloversim_task.checker


cmd = myargv[1]

if cmd == "generate_world":
  print("World generated, path:", generate_world())

if cmd == "check_task":
  run_checker()

if cmd == "wait_ready":
  print("Waiting for  copter to come online...")
  with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    s.bind(("0.0.0.0", 9988))
    s.listen()
    conn, addr = s.accept()
    with conn:
      data = conn.recv(1024)
      data = data.decode("utf-8")
      if data[:5] == "ready":
        print("Ready")
        sys.exit(0)
  print("Success")

if cmd == "notify_ready":
  print("Waiting for simulator to come online...")
  for i in range(32):
    try:
      with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect(("192.168.77.10", 9988))
        s.sendall(b"ready")
      break
    except:
      time.sleep(i * 0.1)
  print("Success")
